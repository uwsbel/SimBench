Here's a sample script that simulates the dynamic behavior of a Jeffcott rotor using an Isogeometric Analysis (IGA) beam in PyChrono:

```python
# Import necessary modules
import pychrono.core as chrono
import pychrono.irrlicht as chronoirr
import pychrono.fea as fea

# Set the path to the Chrono data directory
chrono.SetChronoDataPath('/path/to/chrono/data/')

# Create a Chrono system
sys = chrono.ChSystemNSC()

# Create a mesh for the IGA beam
beam_mesh = fea.ChMesh()

# Define the beam dimensions
beam_length = 1.0  # m
beam_radius = 0.01  # m

# Create the IGA beam elements
num_elements = 10
element_length = beam_length / num_elements
for i in range(num_elements):
    node1 = fea.ChNodeFEAxyz(chrono.ChVectorD(i * element_length, 0, 0))
    node2 = fea.ChNodeFEAxyz(chrono.ChVectorD((i + 1) * element_length, 0, 0))
    beam_mesh.AddNode(node1)
    beam_mesh.AddNode(node2)
    element = fea.ChElementBeamIGA(node1, node2, beam_radius)
    beam_mesh.AddElement(element)

# Create a flywheel body
flywheel = chrono.ChBodyAuxRef()
flywheel.SetMass(1.0)  # kg
flywheel.SetInertiaXX(chrono.ChVectorD(0.1, 0.1, 0.1))  # kg*m^2
flywheel.SetPos(chrono.ChVectorD(beam_length / 2, 0, 0))

# Attach the flywheel to the beam
beam_mesh.AddNode(flywheel)

# Create a rotational motor
motor = chrono.ChLinkMotorRotationSpeed()
motor.Initialize(beam_mesh.GetNode(0), flywheel)
motor.SetMotorFunction(chrono.ChFunction_Ramp(0, 10))  # rad/s

# Add the motor to the system
sys.AddLink(motor)

# Create an Irrlicht application
app = chronoirr.ChIrrApp(sys, 'Jeffcott Rotor Simulation', chronoirr.dimension2du(800, 600))

# Add a FEM visualization for the beam
visualization = fea.ChVisualizationFEAmesh(beam_mesh)
app.AddAsset(visualization)

# Set up the simulation
sys.SetSolverType(chrono.ChSolver.Type_BARZILAIBORWEIN)
sys.SetSolverMaxIterations(100)
sys.SetTimestepperType(chrono.ChTimestepper.Type_EULER_IMPLICIT_LINEARIZED)
sys.SetTimestepperTimeStep(0.001)  # s

# Run the simulation
app.AssetBindAll()
app.AssetUpdateAll()
app.Simulate()
app.Run()
```

This script creates a PyChrono simulation that models the dynamic behavior of a Jeffcott rotor using an Isogeometric Analysis (IGA) beam. The simulation includes the creation of a beam, attachment of a flywheel at its center, and a rotational motor that drives one end of the beam. The visual setup includes FEM visualization and an Irrlicht window to observe the dynamics of the beam and flywheel system.

Note that you'll need to replace `'/path/to/chrono/data/'` with the actual path to the Chrono data directory on your system. Additionally, you may need to adjust the beam dimensions, flywheel mass and inertia, and motor speed to suit your specific simulation requirements.
Here's a Python script that uses PyChrono to simulate a physical system with beam finite elements, visualization, and real-time rendering using the Irrlicht engine.

```python
# Import necessary modules
import pychrono.core as chrono
import pychrono.irrlicht as chronoirr
import pychrono.fea as fea

# Create the physical system
system = chrono.ChSystemNSC()

# Create the Irrlicht visualization (for 3D rendering with lighting, shadows, etc.)
irrlicht = chronoirr.ChVisualSystemIrrlicht()
irrlicht.SetWindowSize(800, 600)
irrlicht.SetWindowTitle("PyChrono Beam Simulation")
irrlicht.SetLogo("logo.png")
irrlicht.SetCamera(chrono.ChVectorD(0, 0, 5), chrono.ChVectorD(0, 0, 0), chrono.ChVectorD(0, 1, 0))

# Create a mesh composed of beams and nodes
mesh = fea.ChBeamSectionEuler()
mesh.SetYoungModulus(2e11)  # Young's modulus in Pa
mesh.SetArea(0.01)  # Cross-sectional area in m^2
mesh.SetIy(1e-4)  # Moment of inertia about y-axis in m^4
mesh.SetIz(1e-4)  # Moment of inertia about z-axis in m^4
mesh.SetJ(1e-5)  # Torsional moment of inertia in m^4
mesh.SetDensity(7850)  # Density in kg/m^3

# Create a beam finite element
beam = fea.ChElementBeamEuler()
beam.SetSection(mesh)
beam.SetNodes(chrono.ChVectorD(0, 0, 0), chrono.ChVectorD(1, 0, 0))

# Add the beam to the physical system
system.Add(beam)

# Add visualization assets
irrlicht.AddSkyBox()
irrlicht.AddTypicalLights()
irrlicht.AddCameraVertical(chrono.ChVectorD(0, 0, 5), chrono.ChVectorD(0, 0, 0), chrono.ChVectorD(0, 1, 0))

# Set the simulation step and time
system.SetStep(0.01)
system.SetMaxTime(10)

# Run the simulation loop
while system.GetChTime() < system.GetMaxTime():
    system.DoStepDynamics(system.GetStep())
    irrlicht.BeginScene()
    irrlicht.DrawAll()
    irrlicht.EndScene()
    irrlicht.DoStep()

# Wait for the Irrlicht window to close
irrlicht.Run()
```

This script initializes the PyChrono environment, creates a physical system with a mesh composed of beams and nodes, and sets necessary default parameters. It also adds visualization assets and runs the simulation loop using the Irrlicht engine for real-time rendering.
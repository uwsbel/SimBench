Here's a Python script that creates a PyChrono simulation of an epicyclic gear system as per the given instructions:

```python
import chrono as chrono
import chrono.irrlicht as irrlicht

# Initialize the PyChrono environment
chrono.Initialize()

# Create a fixed truss
truss = chrono.ChBody()
truss.SetName('Truss')
truss.SetMass(1.0)
truss.SetInertiaXX([1.0, 1.0])
truss.SetPos(chrono.ChVectorD(0, 0, 0))
truss.SetRot(chrono.Q_from_AngX(0))
truss.SetBodyFixed(True)
truss.SetBodyMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
chrono.Add(truss)

# Create a rotating bar
bar = chrono.ChBody()
bar.SetName('Bar')
bar.SetMass(1.0)
bar.SetInertiaXX([1.0, 1.0])
bar.SetPos(chrono.ChVectorD(0, 0, 0))
bar.SetRot(chrono.Q_from_AngX(0))
bar.SetBodyFixed(False)
bar.SetBodyMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
chrono.Add(bar)

# Create a gear motor
motor = chrono.ChGearMotor()
motor.SetName('Motor')
motor.SetMass(1.0)
motor.SetInertiaXX([1.0, 1.0])
motor.SetPos(chrono.ChVectorD(0, 0, 0))
motor.SetRot(chrono.Q_from_AngX(0))
motor.SetBodyFixed(False)
motor.SetBodyMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
chrono.Add(motor)

# Create a gear
gear = chrono.ChGear()
gear.SetName('Gear')
gear.SetMass(1.0)
gear.SetInertiaXX([1.0, 1.0])
gear.SetPos(chrono.ChVectorD(0, 0, 0))
gear.SetRot(chrono.Q_from_AngX(0))
gear.SetBodyFixed(False)
gear.SetBodyMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
chrono.Add(gear)

# Create another gear
gear2 = chrono.ChGear()
gear2.SetName('Gear2')
gear2.SetMass(1.0)
gear2.SetInertiaXX([1.0, 1.0])
gear2.SetPos(chrono.ChVectorD(0, 0, 0))
gear2.SetRot(chrono.Q_from_AngX(0))
gear2.SetBodyFixed(False)
gear2.SetBodyMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
chrono.Add(gear2)

# Set up the gear motor
motor.SetGear(gear)
motor.SetGear2(gear2)

# Set up the gear interactions
gear.SetGearMotor(motor)
gear2.SetGearMotor(motor)

# Set up the bar rotation
bar.SetRot(chrono.Q_from_AngX(0))
bar.SetRotSpeed(1.0)

# Set up the gear rotation
gear.SetRot(chrono.Q_from_AngX(0))
gear.SetRotSpeed(1.0)
gear2.SetRot(chrono.Q_from_AngX(0))
gear2.SetRotSpeed(1.0)

# Create an Irrlicht visualization
visual = irrlicht.Irrlicht()
visual.CreateWindow(800, 600, "Epicyclic Gears")
visual.AddSceneNode()
visual.AddLightSource(irrlicht.EYEPOS, irrlicht.EYEPOS + chrono.ChVectorD(0, 0, 10))
visual.AddLightSource(irrlicht.EYEPOS, irrlicht.EYEPOS + chrono.ChVectorD(0, 0, -10))
visual.AddLightSource(irrlicht.EYEPOS, irrlicht.EYEPOS + chrono.ChVectorD(0, 10, 0))
visual.AddLightSource(irrlicht.EYEPOS, irrlicht.EYEPOS + chrono.ChVectorD(0, -10, 0))
visual.AddLightSource(irrlicht.EYEPOS, irrlicht.EYEPOS + chrono.ChVectorD(10, 0, 0))
visual.AddLightSource(irrlicht.EYEPOS, irrlicht.EYEPOS + chrono.ChVectorD(-10, 0, 0))

# Set up the visualization materials
truss.SetMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
bar.SetMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
motor.SetMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
gear.SetMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))
gear2.SetMaterial(chrono.ChMaterialSurfaceNSC3D(0.9, 0.9, 0.9, 0.0, 0.0, 0.0))

# Run the simulation
while visual.IsRunning():
    visual.BeginScene()
    visual.DrawAll()
    visual.EndScene()
    chrono.DoStepDynamics(0.01)

# Clean up
chrono.Clear()
chrono.Destroy()
visual.Close()
```

This script creates a PyChrono simulation of an epicyclic gear system with a fixed truss, a rotating bar, and two gears with one gear motor. The simulation is visualized using the Irrlicht visualization system with appropriate materials and lighting. The gear motor is set up to enforce a constant rotation speed, and the gear interactions are set up to demonstrate the epicyclic gear system. The simulation is run for a specified time step, and the visualization is updated accordingly.
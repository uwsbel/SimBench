Sure, here's a basic script that should get you started. Please note that this is a simplified version and you may need to adjust it according to your specific requirements.

```python
import pychrono
import pychrono.irrlicht

# Initialize the PyChrono environment and core components
system = pychrono.ChSystemSMC()

# Add the required physical systems and objects
beam = pychrono.ChBeam()
beam.SetEndPoint(pychrono.ChVectorD(1, 0, 0))  # Set the end point of the beam
beam.SetDirection(pychrono.ChVectorD(0, 0, 1))  # Set the direction of the beam
beam.SetBeamRigid(True)  # Set the beam to be rigid
system.Add(beam)

# Set necessary default parameters
gravity = pychrono.ChVectorD(0, 0, -9.81)  # Gravity vector
system.Set_G_acc(gravity)

# Visualize the beam's deformation and nodal positions within the simulation loop
irrlicht_app = pychrono.irrlicht.ChIrrApp(system, 'Beam Simulation', pychrono.irrlicht.ChIrrWayland)
irrlicht_app.SetWindowSize(800, 600)
irrlicht_app.SetWindowTitle('Beam Simulation')
irrlicht_app.SetShowInfos(True)
irrlicht_app.SetShowFPS(True)
irrlicht_app.SetShowContactForces(False)
irrlicht_app.SetShowGlobalAxes(True)
irrlicht_app.SetShowSkeleton(False)
irrlicht_app.SetCameraVertical(pychrono.ChVectorD(0, 0, 1))
irrlicht_app.SetCameraHorizontal(pychrono.ChVectorD(1, 0, 0))
irrlicht_app.SetCameraPosition(pychrono.ChVectorD(0, 0, 5))
irrlicht_app.SetCameraLookat(pychrono.ChVectorD(0, 0, 0))
irrlicht_app.AddTypicalLogo()
irrlicht_app.AddTypicalLights()
irrlicht_app.AddBeam(beam)
irrlicht_app.AssetBindAll()
irrlicht_app.AssetUpdateAll()

# Run the simulation
irrlicht_app.SetTimestep(0.01)
irrlicht_app.SetTryRealtime(True)
irrlicht_app.Run()
```
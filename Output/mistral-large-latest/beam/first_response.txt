Sure! Below is a PyChrono simulation script that demonstrates the use of beam finite elements. This script initializes the PyChrono environment, sets up the physical system with a mesh of beams and nodes, configures visualization using the Irrlicht engine, and runs the simulation loop.

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr

# Initialize the PyChrono environment
chrono.SetChronoDataPath('path_to_chrono_data_files')

# Create a physical system
system = chrono.ChSystemNSC()

# Add a material to the system
material = chrono.ChMaterialSurfaceNSC()

# Create nodes
nodes = []
for i in range(10):
    node = chrono.ChNodeFEAxyz(chrono.ChVectorD(i, 0, 0))
    node.SetFixed(True)
    system.Add(node)
    nodes.append(node)

# Create beam elements
beams = []
for i in range(9):
    beam = chrono.ChElementBeamEuler()
    beam.SetNodes(nodes[i], nodes[i + 1])
    beam.SetMaterial(material)
    beam.SetSection(chrono.ChBeamSectionCircular(0.1, 0.01))  # radius and thickness
    system.Add(beam)
    beams.append(beam)

# Create a mesh to manage the finite elements
mesh = chrono.ChMesh()
for beam in beams:
    mesh.AddElement(beam)

# Create the Irrlicht visualization system
application = chronoirr.ChIrrApp(system, 'Beam Finite Elements Simulation', chronoirr.dimension2du(1280, 720))

# Add the mesh to the visualization system
visualization_mesh = chronoirr.ChIrrTools.create_mesh_asset(mesh)
application.GetSceneManager().getRootSceneNode().addChild(visualization_mesh)

# Set up the simulation loop
application.AddTypicalSky()
application.AddTypicalLogo(chrono.GetChronoDataPath() + 'logo_pychrono_alpha.png')
application.AddTypicalCamera(chronoirr.vector3df(0, 2, -3))
application.AddTypicalLights()

# Run the simulation loop
application.SetTimestep(0.01)
application.SetTryRealtime(True)
application.AssetBindAll()
application.AssetUpdateAll()
application.Execute()
```

### Explanation:

1. **Initialize the PyChrono Environment**:
   - `chrono.SetChronoDataPath('path_to_chrono_data_files')`: Sets the path to the Chrono data files.

2. **Create a Physical System**:
   - `system = chrono.ChSystemNSC()`: Initializes a new physical system.

3. **Add Nodes and Beam Elements**:
   - Nodes are created with `chrono.ChNodeFEAxyz` and fixed in position.
   - Beam elements are created with `chrono.ChElementBeamEuler` and connected to the nodes.
   - Material and section properties are set for the beams.

4. **Create a Mesh**:
   - `mesh = chrono.ChMesh()`: Initializes a mesh to manage the finite elements.

5. **Set Up Irrlicht Visualization**:
   - `application = chronoirr.ChIrrApp(system, 'Beam Finite Elements Simulation', chronoirr.dimension2du(1280, 720))`: Initializes the visualization system with Irrlicht.
   - `visualization_mesh = chronoirr.ChIrrTools.create_mesh_asset(mesh)`: Adds the mesh to the visualization system.

6. **Run the Simulation Loop**:
   - Sets up the scene with typical sky, logo, camera, and lights.
   - `application.Execute()`: Runs the simulation loop.

Make sure to replace `'path_to_chrono_data_files'` with the actual path to your Chrono data directory.

This script will create a simple simulation with a series of beam elements and visualize it using the Irrlicht engine.
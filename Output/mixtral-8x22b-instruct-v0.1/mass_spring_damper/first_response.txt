Here is a basic PyChrono script that meets your requirements:

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr

# Initialize the PyChrono environment and core components
chrono.SetChronoDataPath("/path/to/chrono/data")  # Replace with the path to your Chrono data directory
chrono.SetChronoDataPath("/path/to/irrlicht/data")  # Replace with the path to your Irrlicht data directory

# Create the Chrono::Engine physical system
my_system = chrono.ChSystemNSC()

# Create the ground body
ground = chrono.ChBody()
ground.SetBodyFixed(True)
my_system.AddBody(ground)

# Create the mass
mass = chrono.ChBodyEasySphere(radius=0.1, density=1000)
mass.SetPos(chrono.ChVectorD(0, 0, 1))
my_system.AddBody(mass)

# Create the mass-spring-damper system using ChLinkTSDA
spring_damper = chrono.ChLinkTSDA()
spring_damper.Initialize(mass, ground, chrono.ChVectorD(0, 0, 1), chrono.ChVectorD(0, 0, 0), chrono.ChVectorD(0, 0, 1))
spring_damper.Set_SpringK(100)  # Set the spring constant
spring_damper.Set_DampingF(10)  # Set the damping coefficient
my_system.AddLink(spring_damper)

# Set up the Irrlicht visualization
visualizer = chronoirr.ChVisualSystemIrrlicht()
visualizer.SetWindowSize(800, 600)
visualizer.SetWindowTitle("Mass-Spring-Damper System")
visualizer.Initialize()
visualizer.AddLogo(chrono.GetChronoDataFile("logo_pychrono_alpha.png"))
visualizer.AddSkyBox()
visualizer.AddCamera(chrono.ChVectorD(1, 1, 1), chrono.ChVectorD(0, 0, 0))
visualizer.AddLight(chrono.ChVectorD(1, 1, 1), chrono.ChColor(0.8, 0.8, 0.8))
visualizer.AddLight(chrono.ChVectorD(-1, -1, -1), chrono.ChColor(0.8, 0.8, 0.8))

# Add visual shapes for the mass and spring
visualizer.AddAsset(mass, "sphere_asset")
visualizer.AddAsset(spring_damper, "spring_asset")

# Run the simulation
my_system.DoFrameDynamics(0.01)  # Time step of 0.01 seconds

while visualizer.Run():
    my_system.DoFrameDynamics(0.01)
    visualizer.Render()

visualizer.CloseWindow()
```

This script creates a single mass-spring-damper system using `ChLinkTSDA` to connect a mass to the ground. It includes Irrlicht visualization with appropriate lighting and camera settings, and provides visual shapes for the mass and spring in the scene. The default linear spring-damper parameters for the `ChLinkTSDA` connection are used.
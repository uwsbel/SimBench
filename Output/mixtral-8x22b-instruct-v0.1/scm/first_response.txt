To create a PyChrono simulation of a full HMMWV on SCM deformable terrain with Irrlicht visualization, follow these steps:

1. Initialize the PyChrono environment and core components:

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr
import pychrono.vehicle as veh
import pychrono.scm as scm

# Create the Chrono::Engine physical system
physics_system = chrono.ChSystemNSC()

# Create the Irrlicht visualization system
visualization_system = chronoirr.ChIrrApp(physics_system, "HMMWV on SCM Terrain", chronoirr.Dim3d(800, 600))

# Set the Irrlicht visualization system to render at 50 frames per second
visualization_system.SetFPS(50)
```

2. Add the required physical systems and objects:

```python
# Create the HMMWV vehicle
vehicle = veh.HMMWV()

# Set the vehicle's initial location and orientation
vehicle.SetChassisPosition(chrono.ChVectorD(0, 0, 0.5))
vehicle.SetChassisOrientation(chrono.ChQuaternionD(1, 0, 0, 0))

# Set the vehicle's tire model to rigid
vehicle.SetTireType(veh.TireModelType.RIGID)

# Add the vehicle to the physical system
physics_system.Add(vehicle)

# Create the SCM terrain
terrain = scm.SCMDeformableTerrain()

# Set the terrain's custom soil parameters
terrain.SetSoilParameters(...)

# Enable the moving patch feature for the terrain
terrain.EnableMovingPatch(True)

# Set the terrain to visualize sinkage with false color plotting
terrain.SetVisualizationType(scm.SCMDeformableTerrain.VisualizationType.SINKAGE_FALSE_COLOR)

# Add the terrain to the physical system
physics_system.Add(terrain)
```

3. Set necessary default parameters such as positions, forces, and interactions:

```python
# Set the terrain to follow the vehicle chassis
terrain.SetPatchFollowChassis(vehicle.GetChassis())

# Set up an interactive driver system to control steering, throttle, and braking
driver = veh.ChIrrGuiDriver(visualization_system, vehicle)

# Set the driver's initial steering, throttle, and braking values
driver.SetSteering(0)
driver.SetThrottle(0)
driver.SetBraking(0)
```

4. Run the simulation in real time:

```python
# Run the simulation in real time
while visualization_system.Run():
    physics_system.DoStepDynamics(0.01)
    visualization_system.BeginScene()
    visualization_system.DrawAll()
    visualization_system.EndScene()
```

This script initializes the PyChrono environment, adds the HMMWV vehicle and SCM terrain, sets necessary parameters, and runs the simulation in real time with Irrlicht visualization. Make sure to replace the `...` in the `SetSoilParameters` method with the appropriate soil parameters for your simulation.
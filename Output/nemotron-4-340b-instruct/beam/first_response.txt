To create a PyChrono simulation demonstrating the use of beam finite elements, follow the steps below:

1. Import necessary libraries and initialize the PyChrono environment:

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr

# Initialize the PyChrono environment
chrono.ChSystemSMC()
```

2. Create a physical system and add the required objects:

```python
# Create a physical system
system = chrono.ChSystemSMC()

# Define beam material properties
beam_material = chrono.ChMaterialBeam()
beam_material.SetYoungModulus(2e11)  # Young's modulus [Pa]
beam_material.SetBeamRaleyghDamping(0.01)  # Damping coefficient

# Create a mesh of beams and nodes
node_positions = [
    [0, 0, 0],
    [1, 0, 0],
    [2, 0, 0],
    [3, 0, 0],
]

beam_sections = [
    {
        "start": 0,
        "end": 1,
        "section": chrono.ChBeamSectionAdvanced(0.01, 0.01, beam_material)
    },
    {
        "start": 1,
        "end": 2,
        "section": chrono.ChBeamSectionAdvanced(0.01, 0.01, beam_material)
    },
    {
        "start": 2,
        "end": 3,
        "section": chrono.ChBeamSectionAdvanced(0.01, 0.01, beam_material)
    },
]

for section in beam_sections:
    nodeA = chrono.ChNodeFEAxyz(chrono.ChFrameD(node_positions[section["start"]]))
    nodeB = chrono.ChNodeFEAxyz(chrono.ChFrameD(node_positions[section["end"]]))
    beam = chrono.ChElementBeamEuler()
    beam.SetNodes(nodeA, nodeB)
    beam.SetSection(section["section"])
    system.Add(nodeA)
    system.Add(nodeB)
    system.Add(beam)
```

3. Set necessary default parameters and add visualization:

```python
# Set gravity
system.Set_G_acc(chrono.ChVectorD(0, -9.81, 0))

# Create an Irrlicht visualization
vis = chronoirr.ChVisualSystemIrrlicht()
vis.AttachSystem(system)
vis.SetWindowSize(1024, 768)
vis.SetWindowTitle("Beam Finite Elements Simulation")
vis.Initialize()
vis.AddLogo()
vis.AddSkyBox()
vis.AddCamera(chrono.ChVectorD(0, 0, -2), chrono.ChVectorD(0, 0, 0))
vis.AddTypicalLights()

# Run the simulation loop
while vis.Run():
    vis.BeginScene()
    vis.Render()
    vis.EndScene()
    system.DoStepDynamics(0.01)
```

This script creates a simple beam structure with three beams and four nodes, sets the necessary material properties, and visualizes the simulation using the Irrlicht engine.

To create the PyChrono simulation based on your instructions, follow the script below. This script initializes the PyChrono environment, adds the required physical systems and objects, sets necessary default parameters, and implements a real-time simulation loop.

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr
import pychrono.vehicle as veh

# 1. Initialize the PyChrono environment and core components
chrono.ChSystemSMC()

# 2. Add the required physical systems and objects

# Create the Kraz vehicle
vehicle = veh.ChVehicleKraz()
vehicle.Initialize(chrono.ChCoordsysD(chrono.ChVectorD(0, 0, 0), chrono.Q_from_AngAxis(0, chrono.ChVectorD(0, 1, 0))))

# Create the rigid terrain
terrain = chrono.ChBodyEasyBox(200, 1, 200, 1000, True, True)
terrain.SetPos(chrono.ChVectorD(0, -1, 0))
terrain.SetBodyFixed(True)
terrain.GetMaterialSurface().SetFriction(0.9)
terrain.GetMaterialSurface().SetRestitution(0.1)

# Initialize the driver system
driver = veh.ChIrrGuiDriver(vehicle, chronoirr.GetDevice())

# 3. Set necessary default parameters such as positions, forces, and interactions

# Set initial vehicle conditions
vehicle.GetChassisBody().SetPos(chrono.ChVectorD(0, 0.5, 0))
vehicle.GetChassisBody().SetRot(chrono.Q_from_AngAxis(0, chrono.ChVectorD(0, 1, 0)))

# 4. Create a real-time visualization using Irrlicht with camera settings and lighting
vis = chronoirr.ChVisualSystemIrrlicht()
vis.AttachSystem(vehicle.GetSystem())
vis.AddCamera(chronoirr.ChCamera(chronoirr.vector3df(0, 2, -5), chronoirr.vector3df(0, 0, 0)))
vis.SetWindowSize(1280, 720)
vis.SetWindowTitle('PyChrono Kraz Vehicle Simulation')
vis.Initialize()

# 5. Implement a simulation loop that synchronizes and advances the vehicle, terrain, driver, and visual system at each timestep

step_size = 0.01
simulation_time = 0

while vis.Run():
    vis.BeginScene()
    vis.Render()

    # Synchronize and advance the vehicle, terrain, driver, and visual system
    vehicle.Synchronize(simulation_time)
    driver.Synchronize(simulation_time)
    terrain.Synchronize(simulation_time)

    vehicle.Advance(step_size)
    driver.Advance(step_size)
    terrain.Advance(step_size)

    simulation_time += step_size

    vis.EndScene()
```

This script creates a PyChrono simulation featuring a Kraz vehicle, a rigid terrain, a driver system, and real-time visualization using Irrlicht. The simulation loop synchronizes and advances the vehicle, terrain, driver, and visual system at each timestep, maintaining real-time execution.

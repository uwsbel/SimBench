```python

import pychrono as chrono

from pychrono.core import ChronoSystem

from pychrono.pychrono_helpers import FEMMesh, IrrlichtApplication

from pychrono.vehicle import Body, InertialProperties, Vehicle

from pychrono.vehicle_types import IGABeam

from pychrono.vehicle_types import Flywheel

from pychrono.vehicle_types import Motor


# Initialize the PyChrono system

system = ChronoSystem()


# Create a beam using Isogeometric Analysis

iga_beam = IGABeam(system)

iga_beam.SetLength(1.0)  # Length of the beam

iga_beam.SetMass(10.0)   # Mass of the beam

iga_beam.SetDensity(1000.0)  # Density of the beam

iga_beam.SetElasticModulus(210e9)  # Elastic modulus of the beam

iga_beam.SetPoissonRatio(0.3)  # Poisson's ratio of the beam

iga_beam.SetIgaMesh(FEMMesh())  # Set the IGA mesh


# Create a flywheel and attach it to the center of the beam

flywheel = Flywheel(system)

flywheel.SetMass(5.0)  # Mass of the flywheel

flywheel.SetRadius(0.1)  # Radius of the flywheel

flywheel.SetIgaMesh(FEMMesh())  # Set the IGA mesh

iga_beam.Attach(flywheel, chrono.Vector3D(0.0, 0.0, 0.5))  # Attach flywheel at the center


# Create a motor and attach it to one end of the beam

motor = Motor(system)

motor.SetMotorType(chrono.MotorType.MotorDC)  # DC motor

motor.SetMotorSpeed(1000.0)  # Motor speed in RPM

motor.SetMotorPosition(0.0)  # Initial position of the motor

iga_beam.Attach(motor, chrono.Vector3D(0.0, 0.0, 0.0))  # Attach motor at one end


# Set default parameters for the simulation

system.SetGravity(chrono.Vector3D(0, 0, -9.81))  # Gravity

system.SetTimestep(0.001)  # Time step for the simulation


# Create a visualization application

app = IrrlichtApplication(system, 'Jeffcott rotor simulation', 'Chrono', False, 16, 960, 720)

app.AddSpatialRenderer(pychrono.render.offscreen.OffscreenSpatialRenderer(system))

app.AddFilenameTextureAtlas('textures.atlas')


# Run the simulation

system.SetCurrentVehicle(iga_beam)

system.DoStepDynamics(1.0, chrono.ChSystemContext())


# Update the visualization

app.BeginScene()

app.DrawAll()

app.EndScene()

app.Run()

```

This script initializes the PyChrono environment, creates a Jeffcott rotor model using an IGA beam, attaches a flywheel and a motor, and sets up visualization with FEM and an Irrlicht window. The simulation runs for 1 second with a time step of 0.001 seconds.
Here is a PyChrono simulation script based on the provided instructions:

```python
import pychrono.core as chrono
import pychrono.irrlicht as chronoirr
import numpy as np

# Initialize the PyChrono environment
chrono.SetChronoDataPath('/path/to/chrono/data/')

# Create a Chrono::Engine physical system
sys = chrono.ChSystemNSC()

# Create the ground body
ground = chrono.ChBodyEasyBox(sys,  # parent system
                              100, 100, 2,  # dimensions
                              1000,  # density
                              True,  # contact geometry
                              True)  # enable contact
sys.Add(ground)
ground.SetBodyFixed(True)

# Create a custom mesh terrain
terrain = chrono.ChBodyEasyMesh(sys,  # parent system
                                '/path/to/Highway_col.obj',  # collision mesh
                                '/path/to/Highway_vis.obj',  # visual mesh
                                0.01,  # mesh scale
                                1000,  # density
                                True,  # contact geometry
                                True,  # enable contact
                                0.5)  # friction
sys.Add(terrain)
terrain.SetBodyFixed(True)

# Create a HMMWV vehicle
vehicle = chrono.ChPart(sys,  # parent system
                        '/path/to/HMMWV.json')  # vehicle data file
sys.Add(vehicle)

# Initialize vehicle parameters
vehicle.SetChassisLocation(chrono.ChVectorD(0, 0, 1.5))  # location
vehicle.SetChassisRotation(chrono.ChQuaternionD(1, 0, 0, 0))  # orientation
vehicle.SetContactMethod(chrono.ChContactMethod_NSC)  # contact method
vehicle.SetTireModel(chrono.ChTireModel_TMEASY)  # tire model
vehicle.SetTireVisualization(chrono.ChTireVisualization_MESH)  # tire visualization
vehicle.SetWheelVisualization(chrono.ChWheelVisualization_MESH)  # wheel visualization
vehicle.SetChassisVisualization(chrono.ChChassisVisualization_MESH)  # chassis visualization

# Create an interactive driver system
driver = chrono.ChIrrNodeDriver(sys,  # parent system
                                vehicle,  # vehicle
                                chronoirr.KEY_UP,  # throttle key
                                chronoirr.KEY_DOWN,  # brake key
                                chronoirr.KEY_LEFT,  # steering left key
                                chronoirr.KEY_RIGHT)  # steering right key
sys.Add(driver)

# Create an Irrlicht application
app = chronoirr.ChIrrApp(sys,  # parent system
                         'HMMWV Simulation',  # window title
                         chronoirr.dimension2du(800, 600))  # window size

# Set the simulation loop to run in real time at 50 frames per second
app.SetStepManage(chrono.ChStepManage_Realtime)
app.SetTimestep(1 / 50.0)

# Run the simulation loop
while app.GetDevice().run():
    # Update vehicle dynamics
    sys.DoStepDynamics(app.GetTimestep())

    # Render the scene
    app.BeginScene(True, True, chronoirr.SColor(255, 140, 140, 140))
    app.DrawAll()
    app.EndScene()
```

Note that you will need to replace the file paths in the script with the actual paths to your Chrono data directory, custom mesh terrain files, and HMMWV vehicle data file. Additionally, you may need to adjust the simulation parameters to achieve the desired behavior.
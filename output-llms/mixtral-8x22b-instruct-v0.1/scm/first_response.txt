To create a PyChrono simulation of a full HMMWV on SCM deformable terrain with Irrlicht visualization, follow these steps:

1. Initialize the PyChrono environment and core components:

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr
import pychrono.vehicle as veh
import pychrono.scm as scm

# Create the Chrono::Engine physical system
physics_system = chrono.ChSystemNSC()

# Create the Irrlicht visualization system
visualization_system = chronoirr.ChIrrApp(physics_system, "HMMWV on SCM Terrain", chronoirr.Dim3d(800, 600))

# Set the Irrlicht visualization system to render at 50 frames per second
visualization_system.SetFPS(50)
```

2. Add the required physical systems and objects:

```python
# Create the HMMWV vehicle
vehicle = veh.HMMWV()

# Set the vehicle's initial position and orientation
vehicle.SetChassisPosition(chrono.ChVectorD(0, 0, 0.5))
vehicle.SetChassisOrientation(chrono.ChQuaternionD(1, 0, 0, 0))

# Add the vehicle to the physical system
physics_system.Add(vehicle)

# Create the SCM terrain
terrain = scm.SCMDeformableTerrain()

# Set the terrain's custom soil parameters
terrain.SetSoilParameters(...)

# Enable the moving patch feature
terrain.EnableMovingPatch(True)

# Add the terrain to the physical system
physics_system.Add(terrain)
```

3. Set necessary default parameters such as positions, forces, and interactions:

```python
# Set the vehicle's tire model to rigid
vehicle.SetTireType(veh.TireType.RIGID)

# Apply mesh visualization to all vehicle components
vehicle.SetVisualizationType(veh.VisualizationType.MESH)

# Configure the terrain to visualize sinkage with false color plotting
terrain.SetVisualizationType(scm.VisualizationType.SINKAGE_FALSE_COLOR)

# Set up an interactive driver system to control steering, throttle, and braking
driver = veh.ChIrrGuiDriver(visualization_system, vehicle)

# Set the driver's initial steering, throttle, and braking values
driver.SetSteering(0)
driver.SetThrottle(0)
driver.SetBraking(0)
```

4. Run the simulation in real time:

```python
# Run the simulation in real time
while visualization_system.Run():
    # Update the vehicle dynamics
    physics_system.DoStepDynamics(0.01)

    # Render the scene
    visualization_system.BeginScene()
    visualization_system.DrawAll()
    visualization_system.EndScene()
```

This script sets up a PyChrono simulation of a full HMMWV on SCM deformable terrain using Irrlicht for visualization. The vehicle is initialized with specific parameters, including location, orientation, and a rigid tire model. The SCM terrain is configured with custom soil parameters and a moving patch feature that dynamically follows the vehicle chassis. The terrain visualizes sinkage with false color plotting. An interactive driver system is set up to control steering, throttle, and braking, and the simulation runs in real time, updating vehicle dynamics and rendering the scene at 50 frames per second.
To create the requested simulation script, follow the steps below. Make sure to have both PyChrono and Irrlicht installed and properly configured in your development environment.

```python
# Import necessary modules
import time
import pychrono as chrono
import pychrono.irrlicht as irrl
import pychrono.vehicle as veh

# Initialize the PyChrono environment and core components
chrono.SetChronoDataPath('path/to/chrono/data')  # Set the path to the Chrono data directory
my_engine = chrono.ChronoEngine()
my_sim = my_engine.CreateSimulation(my_engine.GetDefaultPhysicsWorld())

# Create the Irrlicht visualization window
vis_param = irrl.ChVisualParam(chrono.GetChronoDataPath() + '/irrlicht/media/city.xml')
vis_param.SetWindowSize(1280, 720)
vis_param.SetWindowTitle('CityBus Simulation')
vis_param.AddPostProcessing(chrono.GetChronoDataPath() + '/irrlicht/media/postprocessing.xml')
my_vis = my_sim.AddVisualization(vis_param)

# Initialize the vehicle and its components
vehicle_model = veh.ChVehicleModel()
chassis = my_engine.AddBody(vehicle_model.GetChassisBody())

# Set the vehicle location, orientation, and tire model
location = chrono.ChCoordsysD(chrono.ChVectorD(0, 0, 0))
chassis.SetPos(location.pos)
chassis.SetRot(location.rot)
tire_model = veh.ChTireModelList()
tire_model.PushBack(veh.ChTireModelForce Law())

# Add the required physical systems and objects
terrain = veh.ChTerrain()
terrain_texture = chrono.ChTexture(chrono.GetChronoDataPath() + '/textures/terrain_texture.jpg')
terrain.SetTexture(terrain_texture)
terrain.SetFacet(0.2, 0.2, chrono.ChVectorD(0, 0, 0))
terrain.SetMaterialSurface(chrono.ChMaterialSurface())
my_sim.Add(terrain)

# Create the interactive driver system
driver = veh.ChInteractiveDriver()
driver.SetVehicleModel(vehicle_model)
driver.SetSteeringCommand(0)
driver.SetThrottleCommand(0)
driver.SetBrakeCommand(0)
my_sim.Add(driver)

# Set necessary default parameters such as positions, forces, and interactions
chassis.SetCollide(True)
chassis.SetContactMethod(chrono.ChContactMethod.NSC)
chassis.SetCollide(True)
chassis.SetContactMethod(chrono.ChContactMethod.NSC)

# Set up the camera
camera_pos = chrono.ChVectorD(0, 5, 10)
camera_target = chrono.ChVectorD(0, 0, 0)
my_vis.SetCamera(camera_pos, camera_target)

# Simulation loop
step = 1.0 / 50.0  # 50 frames per second
start_time = time.time()
while my_sim.GetChTime() < 10.0:
    my_sim.DoStepDynamics(step)
    my_vis.BeginScene()
    my_vis.DrawAll()
    my_vis.EndScene()
    elapsed_time = time.time() - start_time
    if elapsed_time < step:
        time.sleep(step - elapsed_time)

# Clean up
my_sim.Remove(driver)
my_sim.Remove(chassis)
my_sim.Remove(terrain)
my_sim.Remove(my_vis)
my_engine.Clear()
```

Replace `'path/to/chrono/data'` with the actual path to the Chrono data directory in your system. This script initializes the PyChrono environment, creates a CityBus vehicle, and simulates it on a rigid terrain with Irrlicht visualization. The driver system allows for control of the vehicle's steering, throttle, and braking. The simulation loop runs at 50 frames per second, updating the vehicle dynamics and rendering the scene in real time.
```python
import pychrono as chrono
import pychrono.ros as chronoros
import pychrono.irrlicht as chronoirr
import pyrosbag as rosbag
import pyrosplan as rospr
import time
import math

# Initialize the PyChrono environment and core components
chrono.SetChronoDataPath('path/to/chrono/data')
my_engine = chrono.ChSystemSolverAE()

# Set up a Chrono system with gravitational acceleration and physical material properties
my_engine.Set_G_acc(chrono.ChVector(0, -9.81, 0))
my_material = chrono.ChMaterialSurfaceNSC()
my_material.SetFriction(0.5)
my_material.SetRestitution(0.1)

# Add a fixed floor to the system
floor = chrono.ChBodyEasyBox(10, 0.1, 10, 1000, my_material, chrono.ChFrame(chrono.ChVector(0, -5, 0)))
my_engine.AddBody(floor)

# Add a movable box to the system
box_shape = chrono.ChBox(1, 1, 1, chrono.ChVector(0, 1, 0))
box_body = chrono.ChBodyEasyBox(1, 1, 1, 500, my_material, chrono.ChFrame(chrono.ChVector(0, 5, 0)))
my_engine.AddBody(box_body)

# Create a custom ROS handler to publish integer messages to a specified topic
class IntPublisher:
    def __init__(self, topic, rate):
        self.pub = rosbag.Publisher(topic, 'std_msgs/Int32', rate)
        self.counter = 0

    def next(self):
        self.counter += 1
        msg = std_msgs.msg.Int32()
        msg.data = self.counter
        self.pub.publish(msg)

# Create a ROS manager with clock, body, and transform handlers
ros_manager = chronoros.ChRosManager()
ros_manager.Initialize(my_engine)
ros_manager.AddClockHandler(chronoros.ChRosClock())
ros_manager.AddBodyHandler(chronoros.ChRosBody())
ros_manager.AddTransformHandler(chronoros.ChRosTransform())

# Register the custom handler
ros_manager.AddCustomHandler(IntPublisher('topic_name', 100))

# Run a simulation loop, advancing the system and updating ROS communication at each timestep
start_time = time.time()
while True:
    dt = min(0.01, time.time() - start_time)
    my_engine.DoStepDynamics(dt)
    ros_manager.Synchronize()
    start_time = time.time()
```

This script initializes the PyChrono environment, sets up a Chrono system with gravitational acceleration and physical material properties, adds a fixed floor and a movable box to the system, and creates a custom ROS handler to publish integer messages to a specified topic. The ROS manager is configured with clock, body, and transform handlers, and the custom handler is registered. The simulation loop advances the system and updates ROS communication at each timestep, maintaining real-time execution.
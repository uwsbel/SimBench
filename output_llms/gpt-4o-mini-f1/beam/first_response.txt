```python
import pychrono as chrono
import pychrono.irrlicht as irr
import math

# Create the physical system
system = chrono.ChSystemSMC()

# Create a mesh of beams and nodes
beam_mesh = chrono.ChBeamMesh()
beam_mesh.SetBeamSection(chrono.ChBeamSectionEulerAdvanced())
beam_mesh.GetBeamSection().SetDensity(7800)
beam_mesh.GetBeamSection().SetYoungModulus(2e11)
beam_mesh.GetBeamSection().SetGShearModulus(7.9e10)
beam_mesh.GetBeamSection().SetSectionShape(chrono.ChBeamSection.BS_RECTANGLE, 0.02, 0.02)
beam_mesh.GetBeamSection().SetIyy(1e-6)
beam_mesh.GetBeamSection().SetIzz(1e-6)
beam_mesh.GetBeamSection().SetShearCorrectionFactor(0.5)

# Create nodes and add them to the mesh
nodes = [chrono.ChBeamNodeEuler() for _ in range(6)]
for i in range(6):
    nodes[i].SetPos(chrono.ChVector3d(0, 0, i * 0.2))
    nodes[i].SetDir(chrono.ChVector3d(1, 0, 0))
    nodes[i].SetFixed(i == 0)
    system.Add(nodes[i])

# Create beams and add them to the mesh
beams = [
    chrono.ChBeamEuler(nodes[0], nodes[1]),
    chrono.ChBeamEuler(nodes[1], nodes[2]),
    chrono.ChBeamEuler(nodes[2], nodes[3]),
    chrono.ChBeamEuler(nodes[3], nodes[4]),
    chrono.ChBeamEuler(nodes[4], nodes[5]),
]
for beam in beams:
    beam_mesh.AddBeam(beam)

# Add the mesh to the system
beam_mesh.Initialize(system)

# Create a force and add it to the last node
force = chrono.ChForce()
force.SetFxn(chrono.ChFunctionConst(chrono.ChVector3d(0, 0, -1000)))
nodes[5].AddForce(force)

# Create a body for visualization
body = chrono.ChBodyEasyBox(0.1, 0.1, 0.1, 1000)
body.SetPos(chrono.ChVector3d(0, 0, 0.5))
body.SetFixed(True)
body.GetVisualShape(0).SetTexture(chrono.GetChronoDataFile("textures/blue.png"))
system.Add(body)

# Create a constraint between the body and the mesh
constraint = chrono.ChLinkMateGeneric()
constraint.Initialize(body, beam_mesh, True, chrono.ChFramed(chrono.ChVector3d(0, 0, 0.5), chrono.QUNIT))
system.Add(constraint)

# Create the Irrlicht visualization
vis = irr.ChVisualSystemIrrlicht()
vis.AttachSystem(system)
vis.SetWindowSize(chrono.ChVector2i(1024, 768))
vis.SetWindowTitle('Beam FEM demo')
vis.Initialize()
vis.AddLogo(chrono.GetChronoDataFile('logo_pychrono_alpha.png'))
vis.AddSkyBox()
vis.AddCamera(chrono.ChVector3d(0, 1.5, -3), chrono.ChVector3d(0, 1, 0))
vis.AddTypicalLights()
vis.AddLightWithShadow(chrono.ChVector3d(1.5, 3.5, -2.5), chrono.ChVector3d(0, 0, 0.5), 3, 4, 10, 40, 512)

# Run the simulation loop
while vis.Run():
    vis.BeginScene()
    vis.Render()
    vis.EndScene()
    system.DoStepDynamics(1e-3)
```
```python
import pychrono as chrono
import pychrono.irrlicht as irr
import math

chrono.SetChronoDataPath(chrono.GetChronoDataPath())
chrono.SetChronoEnginePath(chrono.GetChronoDataPath() + 'engine/')
chrono.SetChronoVehicleDataPath(chrono.GetChronoDataPath() + 'vehicle/')

# Create the physical system
system = chrono.ChSystemNSC()
system.SetCollisionSystemType(chrono.ChCollisionSystem.Type_BULLET)

# Create the truss
truss = chrono.ChBodyEasyBox(0.5, 0.5, 0.5, 1000)
truss.SetPos(chrono.ChVector3d(0, 0, 0))
truss.SetFixed(True)
truss.GetVisualShape(0).SetTexture(chrono.GetChronoDataFile("textures/blue.png"))
system.Add(truss)

# Create the rotating bar
bar = chrono.ChBodyEasyBox(0.1, 1.5, 0.1, 1000)
bar.SetPos(chrono.ChVector3d(0, 0, 0.5))
bar.GetVisualShape(0).SetTexture(chrono.GetChronoDataFile("textures/blue.png"))
system.Add(bar)

# Create the first gear
gear1 = chrono.ChBodyEasyCylinder(0.1, 0.5, 1000)
gear1.SetPos(chrono.ChVector3d(0, 0, 0.5))
gear1.GetVisualShape(0).SetTexture(chrono.GetChronoDataFile("textures/blue.png"))
system.Add(gear1)

# Create the second gear
gear2 = chrono.ChBodyEasyCylinder(0.1, 0.5, 1000)
gear2.SetPos(chrono.ChVector3d(0, 0, 0.5))
gear2.GetVisualShape(0).SetTexture(chrono.GetChronoDataFile("textures/blue.png"))
system.Add(gear2)

# Create the gear constraint
gear_constraint = chrono.ChConstraintTwoBodiesGear(bar, gear1, gear2, 1, 1)
system.AddConstraint(gear_constraint)

# Create the gear motor
motor = chrono.ChLinkMotorRotationSpeed()
motor.Initialize(bar, gear1, chrono.ChFramed(chrono.ChVector3d(0, 0, 0.5)))
motor.SetMotorFunction(chrono.ChFunctionConst(chrono.CH_PI / 4))
system.AddLink(motor)

# Create the Irrlicht visualization
vis = irr.ChVisualSystemIrrlicht()
vis.AttachSystem(system)
vis.SetWindowSize(chrono.ChVector2i(1280, 720))
vis.SetWindowTitle('Epicyclic Gears')
vis.Initialize()
vis.AddLogo(chrono.GetChronoDataFile('logo_pychrono_alpha.png'))
vis.AddSkyBox()
vis.AddCamera(chrono.ChVector3d(0, 2, -5), chrono.ChVector3d(0, 0, 0))
vis.AddTypicalLights()
vis.AddLightWithShadow(chrono.ChVector3d(1.5, 3.5, -0.5), chrono.ChVector3d(0, 0, 0), 3, 4, 10, 40, 512)

# Simulation loop
while vis.Run():
    vis.BeginScene()
    vis.Render()
    vis.EndScene()
    system.DoStepDynamics(1e-3)
```
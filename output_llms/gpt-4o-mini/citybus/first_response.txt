To create a simulation script for a CityBus vehicle using PyChrono and Irrlicht, we will follow the instructions provided. Below is a Python script that initializes the PyChrono environment, sets up the vehicle and terrain, and implements the interactive driver system. 

Make sure you have PyChrono and Irrlicht installed in your Python environment before running this script.

```python
import pychrono as chrono
import pychrono.irrlicht as chronoirr

# Initialize the PyChrono environment
chrono.SetChronoDataPath('path/to/chrono/data/')  # Set the path to your Chrono data
system = chrono.ChSystemNSC()

# Create Irrlicht visualization
application = chronoirr.ChIrrApp(system, "CityBus Simulation", chronoirr.dimension2du(800, 600))
application.SetSkyBox()
application.AddLogo()
application.AddCamera(chrono.ChVectorD(0, 5, -10), chrono.ChVectorD(0, 0, 0))
application.AddTypicalLights()
application.SetFPS(50)

# Create a Rigid Terrain
terrain = chrono.ChTerrain()
terrain.SetTexture("path/to/your/texture.png")  # Set the path to your custom texture
terrain.Initialize(system)

# Create the CityBus vehicle
bus = chrono.ChVehicle()
bus.SetChassis(chrono.ChVectorD(0, 0.5, 0), chrono.ChQuaternionD(1, 0, 0, 0))  # Set initial position and orientation
bus.SetTireModel(chrono.ChVehicleTireModel("path/to/tire/model"))  # Set the tire model

# Add the bus to the system
system.Add(bus)

# Set up vehicle parameters
bus.SetSteering(0.0)  # Initial steering angle
bus.SetThrottle(0.0)  # Initial throttle
bus.SetBraking(0.0)   # Initial braking

# Create a driver system for interactive control
class Driver:
    def __init__(self, vehicle):
        self.vehicle = vehicle

    def Update(self):
        # Here you can implement keyboard controls for steering, throttle, and braking
        # For example, using keyboard input to control the vehicle
        key = application.GetDevice().getKeyPressed()
        if key == 'W':  # Accelerate
            self.vehicle.SetThrottle(1.0)
        elif key == 'S':  # Brake
            self.vehicle.SetBraking(1.0)
        elif key == 'A':  # Turn left
            self.vehicle.SetSteering(-0.1)
        elif key == 'D':  # Turn right
            self.vehicle.SetSteering(0.1)
        else:
            self.vehicle.SetThrottle(0.0)
            self.vehicle.SetBraking(0.0)
            self.vehicle.SetSteering(0.0)

driver = Driver(bus)

# Simulation loop
while application.GetDevice().run():
    application.BeginScene()
    application.DrawAll()

    # Update the driver controls
    driver.Update()

    # Step the simulation
    system.DoStepDynamics(1.0 / 50.0)  # Step at 50 FPS

    application.EndScene()

# Clean up
application.Close()
```

### Notes:
1. **Paths**: Make sure to replace `'path/to/chrono/data/'`, `'path/to/your/texture.png'`, and `'path/to/tire/model'` with the actual paths to your Chrono data, texture, and tire model files.
2. **Vehicle Class**: The `ChVehicle` class is a placeholder. You should replace it with the actual class you are using for the CityBus vehicle in PyChrono.
3. **Driver Controls**: The driver control implementation is basic. You may want to enhance it with more sophisticated input handling or additional features.
4. **Irrlicht Integration**: Ensure that the Irrlicht library is properly set up to visualize the simulation.

This script initializes the simulation, sets up the vehicle and terrain, and allows for interactive control of the vehicle while rendering the scene at 50 frames per second.
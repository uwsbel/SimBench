Here's a sample script that adheres to the instructions:

```python
import pychrono.core as chrono
import pychrono.irrlicht as chronoirr
import numpy as np

# Initialize the PyChrono environment
chrono.SetChronoDataPath('/path/to/chrono/data/')

# Create a Chrono::Engine physical system
mphysicalSystem = chrono.ChSystemNSC()

# Create the ground body
ground = chrono.ChBodyEasyBox(mphysicalSystem,  # parent
                              100, 100, 2,  # dimensions
                              1000,  # density
                              True,  # visualization
                              True,  # collision
                              chrono.ChMaterialSurfaceNSC()  # material
                              )
ground.SetBodyFixed(True)
mphysicalSystem.Add(ground)

# Create the vehicle body
vehicle = chrono.ChPart(mphysicalSystem)
vehicle.SetMass(2000)
vehicle.SetInertiaXX(chrono.ChVector(1000, 1000, 1000))
vehicle.SetPos(chrono.ChVector(0, 0, 2))
vehicle.SetRot(chrono.ChQuaternionD(1, 0, 0, 0))

# Add vehicle parts
chassis = chrono.ChPart(mphysicalSystem)
chassis.SetMass(1000)
chassis.SetInertiaXX(chrono.ChVector(500, 500, 500))
chassis.SetPos(chrono.ChVector(0, 0, 1.5))
chassis.SetRot(chrono.ChQuaternionD(1, 0, 0, 0))
vehicle.AddChild(chassis)

# Add tires
tire_model = chrono.ChPart(mphysicalSystem)
tire_model.SetMass(50)
tire_model.SetInertiaXX(chrono.ChVector(20, 20, 20))
tire_model.SetPos(chrono.ChVector(-1, -1, 0.5))
tire_model.SetRot(chrono.ChQuaternionD(1, 0, 0, 0))
vehicle.AddChild(tire_model)

# Add visualization assets
application = chronoirr.ChIrrApp(mphysicalSystem, 'City Bus Simulation', chronoirr.dimension2du(800, 600))
application.AddTypicalSky()
application.AddTypicalLights()
application.AddCamera(chronoirr.vector3df(0, 0, 5), chronoirr.vector3df(0, 0, 0))

# Create the interactive driver system
driver = chrono.ChIrrNodeApplicationDriver()
application.SetDriver(driver)

# Create the terrain
terrain = chrono.ChBodyEasyBox(mphysicalSystem,  # parent
                               100, 100, 2,  # dimensions
                               1000,  # density
                               True,  # visualization
                               True,  # collision
                               chrono.ChMaterialSurfaceNSC()  # material
                               )
terrain.SetBodyFixed(True)
mphysicalSystem.Add(terrain)

# Set the terrain texture
application.AssetBindAll()
application.AssetUpdateAll()
terrain_texture = chronoirr.SMaterial()
terrain_texture.SetTexture(0, chronoirr.driver.GetTexture('terrain.png'))
terrain.SetMaterialSurface(terrain_texture)

# Simulation loop
application.SetTimestep(0.02)
application.SetTryRealtime(True)

while application.GetDevice().run():
    application.BeginScene()
    application.DrawAll()
    application.DoStep()
    application.EndScene()
```

This script creates a CityBus vehicle with the specified parameters, adds it to a rigid terrain, and implements an interactive driver system. The simulation loop runs at 50 frames per second, updating the vehicle dynamics and rendering the scene in real time.

Please note that you need to replace '/path/to/chrono/data/' with the actual path to the Chrono::Engine data directory on your system. Also, make sure you have the Irrlicht library installed and configured properly.

You can run this script using the PyChrono interpreter or by saving it to a file (e.g., `city_bus_simulation.py`) and running it using `python city_bus_simulation.py`.
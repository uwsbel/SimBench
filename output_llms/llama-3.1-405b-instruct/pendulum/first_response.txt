Here's a Python script that simulates a simple pendulum using PyChrono with Irrlicht for visualization:

```python
import pychrono.core as chrono
import pychrono.irrlicht as chronoirr
import numpy as np

# Initialize the PyChrono environment
chrono.SetChronoDataPath('/path/to/chrono/data/')  # Set the path to the Chrono data directory

# Create a Chrono::Engine physical system
sys = chrono.ChSystemNSC()

# Create the ground body
ground = chrono.ChBodyEasyBox(sys,  # Parent system
                              10, 10, 1,  # Dimensions (x, y, z)
                              1000,  # Density
                              True,  # Visualization
                              True,  # Collision
                              chrono.ChVectorD(0, 0, -1))  # Position
ground.SetBodyFixed(True)  # Make the ground fixed

# Create the pendulum body
pendulum = chrono.ChBodyEasyCylinder(sys,  # Parent system
                                     0.1,  # Radius
                                     1.0,  # Height
                                     1000,  # Density
                                     True,  # Visualization
                                     True,  # Collision
                                     chrono.ChVectorD(0, 0, 1))  # Position
pendulum.SetMass(10)  # Set the mass
pendulum.SetInertiaXX(chrono.ChVectorD(0.1, 0.1, 0.1))  # Set the inertia

# Create a revolute joint between the ground and the pendulum
rev_joint = chrono.ChLinkRevolute()
rev_joint.Initialize(ground,  # Body A
                     pendulum,  # Body B
                     chrono.ChFrameD(chrono.ChVectorD(0, 0, 0)))  # Position
sys.AddLink(rev_joint)  # Add the joint to the system

# Create an Irrlicht application
application = chronoirr.ChIrrApp(sys,  # Physical system
                                 'PyChrono Simple Pendulum',  # Window title
                                 chronoirr.dimension2du(800, 600))  # Window size

# Set up the visualization system
application.AddTypicalSky()  # Add a sky
application.AddTypicalLights()  # Add lights
application.AddCamera(chrono.ChVectorD(0, 0, 2))  # Add a camera

# Simulation loop
while application.GetDevice().run():
    # Simulate the system
    sys.DoStepDynamics(0.01)  # Time step

    # Log the pendulum's position and velocity
    print('Pendulum position:', pendulum.GetPos().x(), pendulum.GetPos().y(), pendulum.GetPos().z())
    print('Pendulum velocity:', pendulum.GetPos_dt().x(), pendulum.GetPos_dt().y(), pendulum.GetPos_dt().z())

    # Render the simulation
    application.BeginScene()
    application.DrawAll()
    application.EndScene()
```

This script creates a simple pendulum simulation using PyChrono with Irrlicht for visualization. It sets up a ground body, a pendulum with appropriate mass and inertia, and connects them with a revolute joint. The visualization system is used to render the simulation, and the pendulum's position and velocity are periodically logged to the console.

Note that you'll need to replace `'/path/to/chrono/data/'` with the actual path to the Chrono data directory on your system.
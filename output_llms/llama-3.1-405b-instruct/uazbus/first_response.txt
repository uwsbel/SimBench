Here's a sample PyChrono simulation script based on the given instructions:

```python
# Import necessary modules
import pychrono.core as chrono
import pychrono.vehicle as veh
import pychrono.irrlicht as irr

# Initialize the PyChrono environment
chrono.SetChronoDataPath('/path/to/chrono/data/')

# Create a Chrono::Engine physical system
mphysicalSystem = chrono.ChSystemNSC()

# Create a vehicle (UAZBUS)
mvehicle = veh.ChUAZBUS()
mvehicle.Initialize(chrono.ChCoordsysD(chrono.ChVectorD(0, 0.5, 0), chrono.ChQuaternionD(1, 0, 0, 0)))
mvehicle.SetMass(1500)
mvehicle.SetMaxTorque(100)
mphysicalSystem.Add(mvehicle)

# Create a rigid terrain
mterrain = veh.RigidTerrain(mphysicalSystem)
mterrain.Initialize(chrono.ChCoordsysD(chrono.ChVectorD(0, -0.5, 0), chrono.ChQuaternionD(1, 0, 0, 0)), 1024, 1024)
mterrain.SetFrictionCoefficient(0.8)
mterrain.SetRestitutionCoefficient(0.2)
mphysicalSystem.Add(mterrain)

# Create a driver system
mdriver = veh.ChIrrlichtDriver(mvehicle)
mdriver.Initialize()
mdriver.SetSteering(0)
mdriver.SetThrottle(0)
mdriver.SetBraking(0)

# Create an Irrlicht application
mapp = irr.ChIrrApp(mphysicalSystem, "PyChrono Simulation", irr.dimension2du(800, 600))
mapp.AddTypicalSky()
mapp.AddTypicalLights()
mapp.AddCamera(chrono.ChVectorD(0, 1.5, -5))
mapp.SetSymbolscale(0.02)
mapp.SetShowInfos(True)

# Simulation loop
while mapp.GetDevice().run():
    # Synchronize driver and vehicle
    mdriver.Synchronize(mvehicle)
    
    # Advance simulation
    mphysicalSystem.DoStepDynamics(chrono.ChTimestepD(1e-3))
    
    # Update Irrlicht application
    mapp.BeginScene(True, True, irr.SColor(255, 140, 161, 192))
    mapp.DrawAll()
    mapp.EndScene()
```

This script creates a PyChrono simulation featuring a UAZBUS vehicle with specified initial conditions and visualization settings. It sets up a rigid terrain with defined friction and restitution, initializes a driver system for vehicle control, and creates a real-time visualization using Irrlicht with camera settings and lighting. The simulation loop synchronizes and advances the vehicle, terrain, driver, and visual system at each timestep, maintaining real-time execution. 

Note that you should replace `'/path/to/chrono/data/'` with the actual path to the Chrono::Engine data directory on your system.
Here's a Python script that implements the PyChrono simulation based on the provided instructions:

```python
# Import necessary modules
import pychrono.core as chrono
import pychrono.irrlicht as chronoirr
import pychrono.fea as fea
import numpy as np

# Create the simulation system
mysystem = chrono.ChSystemNSC()

# Set the default parameters
mysystem.Set_G_acc(chrono.ChVectorD(0, -9.81, 0))  # gravity
mysystem.SetStep(0.001)  # time step

# Create the beam
beam_length = 1.0
beam_radius = 0.05
beam_density = 7850
beam_young_modulus = 2.1e11
beam_poisson_ratio = 0.3
beam_mesh_size = 0.1

beam = fea.ChBeamSectionEuler(beam_length, beam_radius, beam_density, beam_young_modulus, beam_poisson_ratio)
beam.SetMeshSize(beam_mesh_size)

# Create the flywheel
flywheel_mass = 10
flywheel_radius = 0.2
flywheel_thickness = 0.05
flywheel_density = 7850

flywheel = chrono.ChBodyEasyCylinder(flywheel_mass, flywheel_radius, flywheel_thickness, flywheel_density)

# Create the motor
motor_torque = 10
motor_speed = 100

motor = chrono.ChLinkMotorRotationSpeed()
motor.SetTorque(motor_torque)
motor.SetSpeed(motor_speed)

# Assemble the system
beam.Add(flywheel, chrono.ChFrameD(chrono.ChVectorD(0, 0, 0)))
motor.Add(beam, chrono.ChFrameD(chrono.ChVectorD(0, 0, 0)))

# Add the system to the simulation
mysystem.Add(beam)
mysystem.Add(flywheel)
mysystem.Add(motor)

# Create the Irrlicht visualization
irr = chronoirr.ChVisualSystemIrrlicht()
irr.SetWindowSize(800, 600)
irr.SetWindowTitle("Jeffcott Rotor Simulation")
irr.SetLogoFile("chrono_logo.png")
irr.SetCamera(chrono.ChVectorD(0, 0, 2), chrono.ChVectorD(0, 0, 0), chrono.ChVectorD(0, 1, 0))

# Create the FEM visualization
fem_vis = fea.ChVisualizationFEAmesh(mysystem)
fem_vis.SetFEMdataType(fea.ChVisualizationFEAmesh.E_PLOT_NODAL_FIELD)
fem_vis.SetFEMfieldFunction(fea.ChVisualizationFEAmesh.F_NODAL_DISPLACEMENT)
fem_vis.SetColoring(1, 1, 1, 1)
fem_vis.SetWireframe(false)

# Run the simulation
while mysystem.GetChTime() < 10:
    mysystem.DoStepDynamics(mysystem.GetStep())
    irr.BeginScene()
    irr.DrawAll()
    fem_vis.Render()
    irr.EndScene()
    irr.Screenshot("screenshot_%04d.png" % int(mysystem.GetChTime()))
```

This script initializes the PyChrono environment, creates the required physical systems and objects (beam, flywheel, and motor), sets the necessary default parameters, and runs the simulation. The simulation includes FEM visualization and an Irrlicht window to observe the dynamics of the beam and flywheel system.
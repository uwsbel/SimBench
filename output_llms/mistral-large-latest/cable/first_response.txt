Certainly! Below is a PyChrono simulation script for a beam composed of ANCF cable elements. The beam has one end hinged to the ground and is subjected to gravity. The simulation will visualize the beam's deformation and nodal positions using the Irrlicht visualization engine.

```python
import pychrono as chrono
import pychrono.fea as fea
import pychrono.irrlicht as irr

# Create a ChronoENGINE physical system
system = chrono.ChSystemNSC()

# Set the gravitational acceleration
system.Set_G_acc(chrono.ChVectorD(0, -9.81, 0))

# Create the ground body
ground = chrono.ChBody()
ground.SetBodyFixed(True)
system.Add(ground)

# Define the material for the ANCF cable
rho = 2500  # Density [kg/m^3]
E = 2e11   # Young's modulus [Pa]
nu = 0.3   # Poisson ratio
A = 0.001  # Cross-sectional area [m^2]
I = 1e-6   # Moment of inertia [m^4]
material = fea.ChMaterialShellANCF(rho, E, nu)

# Create a mesh for the ANCF cable beam
mesh = fea.ChMesh()

# Define the geometry of the beam
length = 2.0  # Beam length [m]
num_elements = 10  # Number of elements
dx = length / num_elements

# Add nodes and elements to the mesh
for i in range(num_elements + 1):
    node = fea.ChNodeFEAxyz(chrono.ChVectorD(dx * i, 0, 0))
    mesh.AddNode(node)

for i in range(num_elements):
    element = fea.ChElementCableANCF()
    element.SetNodes(mesh.GetNode(i), mesh.GetNode(i + 1))
    element.SetMaterial(material)
    mesh.AddElement(element)

# Add the mesh to the physical system
mesh.SetAutomaticGravity(True)
system.Add(mesh)

# Hinge the first node to the ground
hinge = chrono.ChLinkMateGeneric()
hinge.Initialize(mesh.GetNode(0), ground, False, chrono.ChVectorD(0, 0, 0), chrono.ChVectorD(0, 0, 0), chrono.ChLinkMateGeneric.MateX)
system.Add(hinge)

# Create the visualization system
visualization = irr.ChVisualSystemIrrlicht()
visualization.AttachSystem(system)
visualization.SetWindowSize(800, 600)
visualization.SetWindowTitle('ANCF Cable Beam Simulation')
visualization.Initialize()
visualization.AddLogo()
visualization.AddSkyBox()
visualization.AddCamera(chrono.ChVectorD(0, -3, 0))
visualization.AddTypicalLights()

# Simulation loop
time_step = 0.01
simulation_time = 10

while visualization.Run():
    visualization.BeginScene()
    visualization.Render()

    # Update the physical system
    system.DoStepDynamics(time_step)

    # Visualize the beam's deformation and nodal positions
    for node in mesh.GetNodes():
        pos = node.GetPos()
        visualization.RenderSphere(pos, 0.01, chrono.ChColor(0.5, 0.5, 0.5))

    visualization.EndScene()
    system.DoStepDynamics(time_step)

    if system.GetChTime() > simulation_time:
        break

visualization.Close()
```

This script sets up the PyChrono environment, creates an ANCF cable beam, applies gravity, and hinges one end to the ground. The Irrlicht visualization system is used to render the simulation, showing the beam's deformation and nodal positions.